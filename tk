#!/usr/bin/env bash

set -ueo pipefail

usage() { echo "Usage: tk JVM_ARG ... -- TK_ARG ..."; }
misuse() { usage 1>&2; exit 2; }

jar_glob='trapperkeeper-*-standalone.jar'

# Believe last -cp wins for java, and here, any final -cp path will be
# placed in front of the jar.

cp=''
jvm_args=()
while test $# -gt 0; do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        -cp)
            shift
            test $# -gt 0 || misuse
            cp="$1"
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            shift
            jvm_args+=("$1")
            ;;
    esac
done

if test "${TRAPPERKEEPER_JAR:-}"; then
    jar="$TRAPPERKEEPER_JAR"
else
    # Find the standalone jar and make sure there's only one.
    # FIXME: minor race here between find runs
    # Use a bash array expansion to count the files so we don't have
    # to worry about strange paths (though admittedly unlikely here).
    shopt -s nullglob
    jars=(target/$jar_glob)
    shopt -u nullglob
    if test "${#jars[@]}" -gt 1; then
        echo "error: found more than one SNAPSHOT jar:" 1>&2
        find target -maxdepth 1 -name "$jar_glob" 1>&2
        exit 2
    fi
    jar="${jars[0]}"
fi

if ! test -e "$jar"; then
    printf 'Unable to find target/%s; have you run "lein uberjar"?\n' \
           "$jar" 1>&2
    exit 2
fi

set -x
if test "$cp"; then
    cp="$cp:$jar"
else
    cp="$jar"
fi

exec java -cp "$cp" clojure.main -m puppetlabs.trapperkeeper.main "$@"
